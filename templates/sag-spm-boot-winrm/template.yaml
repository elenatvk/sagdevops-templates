alias: sag-spm-boot-winrm
description: WinRM-enabled remote installation using CC bootstrap installer
#dslVersion: 1.1
version: 0.1

environments:
  default:
    nodes: ${}                  # REQUIRED: remote hostnames to bootstrap: host1,host2
    cc.installer: ${}           # REQUIRED: command central bootstrap installer
    # os.credentials.key: ${}     # REQUIRED: Windows credentials for remote hosts connection
    os.username: ${}            # TODO: need to be able to extract from os.credentials.key or not use at all
    os.password: ${}            # TODO: need to be able to extract from os.credentials.key or not use at all

    install.dir: C:\SoftwareAG  # Remote installation dir
    spm.port: 8092              # SPM HTTP port

    # spm.credentials.key: SECURE_ADMINISTRATOR  # SPM Administrator custom credentials

    actions:
      bootstrap.bat:
        target: WINDOWS
        description: Bootstrap SPM on remote Windows hosts from Command Central Windows host
        phase: pre
        script: |
          pwsh.exe -file ${com.softwareag.install.root}\profiles\CCE\data\templates\composite\sag-spm-boot-winrm\push-bootstrap.ps1 -Computername ${nodes} -LocalInstallerZip  ${com.softwareag.install.root}\profiles\CCE\data\installers\${cc.installer} -RemoteInstallPath ${install.dir} -AcceptLicense -PlainCredentials ${os.username}:${os.password} -HttpPort ${spm.port}

      bootstrap.sh:
        target: POSIX
        description: Bootstrap SPM on remote Windows hosts from Command Central Linux/Mac host
        phase: pre
        script: |
          pwsh -f ${com.softwareag.install.root}/profiles/CCE/data/templates/composite/sag-spm-boot-winrm/push-bootstrap.ps1 -Computername ${nodes} -LocalInstallerZip ${com.softwareag.install.root}/profiles/CCE/data/installers/${cc.installer} -RemoteInstallPath ${install.dir} -AcceptLicense -PlainCredentials ${os.username}:${os.password} -HttpPort ${spm.port}
layers:
  infra:
    templates:
      - spm

templates:
  spm:
    products:
      SPM:
        OSGI-SPM: # REQUIRED for registering OSGI-SPM as infrastructure layer instance

provision:
  default:
    infra: ${nodes}

nodes:
  default:
    default:
      port: ${spm.port}
      secure: false                     # always start with HTTP
